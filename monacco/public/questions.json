{
  "easy": {
    "mcq": [
      {
        "id": 1,
        "question": "What is the correct extension of Python files?",
        "options": {
          "a": ".py",
          "b": ".python",
          "c": ".pyt",
          "d": ".pt",
          "e": ".pyth",
          "f": ".p"
        },
        "answer": "a"
      },
      {
        "id": 2,
        "question": "How do you create a variable in Python?",
        "options": {
          "a": "int x = 5",
          "b": "x = 5",
          "c": "declare x = 5",
          "d": "var x = 5",
          "e": "let x = 5",
          "f": "create x = 5"
        },
        "answer": "b"
      },
      {
        "id": 3,
        "question": "Which function is used to get input from the user?",
        "options": {
          "a": "input()",
          "b": "get_input()",
          "c": "read()",
          "d": "scanf()",
          "e": "cin>>",
          "f": "user_input()"
        },
        "answer": "a"
      },
      {
        "id": 4,
        "question": "What is the output of print(2**3)?",
        "options": {
          "a": "6",
          "b": "8",
          "c": "9",
          "d": "16",
          "e": "4",
          "f": "None"
        },
        "answer": "b"
      }
    ],
    "coding_2mark": [
      {
        "id": 11,
        "question": "Write a function to add two numbers.",
        "description": "Create a function that takes two numbers as arguments and returns their sum.",
        "test_cases": [
          {
            "input": [
              5,
              3
            ],
            "output": 8
          },
          {
            "input": [
              -1,
              1
            ],
            "output": 0
          }
        ]
      },
      {
        "id": 12,
        "question": "Write a function to check if a number is even.",
        "description": "Create a function that takes an integer as an argument and returns True if it's even, False otherwise.",
        "test_cases": [
          {
            "input": 4,
            "output": true
          },
          {
            "input": 7,
            "output": false
          }
        ]
      },
      {
        "id": 13,
        "question": "Write a function to find the length of a string.",
        "description": "Create a function that takes a string as an argument and returns its length.",
        "test_cases": [
          {
            "input": "hello",
            "output": 5
          },
          {
            "input": "",
            "output": 0
          }
        ]
      },
      {
        "id": 14,
        "question": "Write a function to convert Celsius to Fahrenheit.",
        "description": "Create a function that takes a Celsius temperature as an argument and returns the equivalent Fahrenheit temperature.",
        "test_cases": [
          {
            "input": 0,
            "output": 32
          },
          {
            "input": 100,
            "output": 212
          }
        ]
      },
      {
        "id": 15,
        "question": "Write a function to find the maximum of two numbers.",
        "description": "Create a function that takes two numbers as arguments and returns the larger of the two.",
        "test_cases": [
          {
            "input": [
              5,
              3
            ],
            "output": 5
          },
          {
            "input": [
              -1,
              1
            ],
            "output": 1
          }
        ]
      }
    ]
  },
  "medium": {
    "mcq": [
      {
        "id": 1,
        "question": "What is the output of the following code?\n\nx = [[1, 2], [3, 4]]\ny = x[:]\ny[0][0] = 100\nprint(x[0][0])",
        "options": {
          "a": "1",
          "b": "100",
          "c": "[100, 2]",
          "d": "Error",
          "e": "None",
          "f": "0"
        },
        "answer": "b"
      },
      {
        "id": 2,
        "question": "What will be the output of the following code?\n\ndef func(a, b=[]):\n  b.append(a)\n  return b\n\nprint(func(1))\nprint(func(2))",
        "options": {
          "a": "[1], [2]",
          "b": "[1], [1, 2]",
          "c": "[1, 2], [1, 2]",
          "d": "[2], [2]",
          "e": "Error",
          "f": "None"
        },
        "answer": "b"
      },
      {
        "id": 3,
        "question": "What does the following code output?\n\nclass A:\n  def __init__(self):\n    self.x = 5\n    self.__y = 10\n\na = A()\nprint(hasattr(a, '_A__y'))",
        "options": {
          "a": "True",
          "b": "False",
          "c": "10",
          "d": "Error",
          "e": "None",
          "f": "AttributeError"
        },
        "answer": "a"
      },
      {
        "id": 4,
        "question": "What will print(round(0.5)) output in Python?",
        "options": {
          "a": "1",
          "b": "0",
          "c": "0.5",
          "d": "Error",
          "e": "None",
          "f": "Undefined"
        },
        "answer": "a"
      },
      {
        "id": 5,
        "question": "What is the output of the following code?\n\na = {1, 2, 3}\nb = {3, 4, 5}\nprint(a ^ b)",
        "options": {
          "a": "{3}",
          "b": "{1, 2, 4, 5}",
          "c": "{1, 2, 3, 4, 5}",
          "d": "{}",
          "e": "{4, 5}",
          "f": "Error"
        },
        "answer": "b"
      }
    ],
    "coding_2mark": [
      {
        "id": 11,
        "question": "Check for Prime Numbers in a Range",
        "description": "Write a Python program to find all prime numbers in a given range.",
        "test_cases": [
          {
            "input": [
              10,
              20
            ],
            "output": [
              11,
              13,
              17,
              19
            ]
          }
        ]
      },
      {
        "id": 12,
        "question": "Check if Two Strings are Anagrams",
        "description": "Write a Python program to check if two strings are anagrams.",
        "test_cases": [
          {
            "input": [
              "listen",
              "silent"
            ],
            "output": true
          },
          {
            "input": [
              "hello",
              "world"
            ],
            "output": false
          }
        ]
      }
    ]
  },
  "hard": {
    "mcq": [
      {
        "id": 1,
        "question": "What is a metaclass in Python?",
        "options": {
          "a": "A class that defines the behavior of other classes",
          "b": "A subclass of the 'type' class",
          "c": "A class that creates classes",
          "d": "All of the above"
        },
        "answer": "d"
      },
      {
        "id": 2,
        "question": "Explain the Global Interpreter Lock (GIL) in Python.",
        "options": {
          "a": "A lock that allows multiple threads to hold the Python interpreter",
          "b": "A lock that prevents multiple native threads from executing Python bytecodes at once",
          "c": "A lock that allows multiple processes to run concurrently",
          "d": "None of the above"
        },
        "answer": "b"
      },
      {
        "id": 7,
        "question": "What are coroutines and how do they differ from threads?",
        "options": {
          "a": "Coroutines are preemtively multitasked, whereas threads are cooperatively multitasked.",
          "b": "Coroutines are cooperatively multitasked, whereas threads are preemtively multitasked.",
          "c": "Coroutines use shared memory, whereas threads use message passing.",
          "d": "Coroutines and threads are the same thing."
        },
        "answer": "b"
      }
    ],
    "coding_2mark": [
      {
        "id": 3,
        "question": "Implement a function to detect cycle in a directed graph.",
        "description": "Write a function to detect if a directed graph has a cycle.",
        "test_cases": []
      },
      {
        "id": 4,
        "question": "Implement a function to find the median of two sorted arrays.",
        "description": "Write a function to find the median of two sorted arrays.",
        "test_cases": []
      },
      {
        "id": 9,
        "question": "Implement a function to find the Longest Common Subsequence.",
        "description": "Write a function to find the LCS between two strings.",
        "test_cases": []
      }
    ],
    "coding_5mark": [
      {
        "id": 5,
        "question": "Implement a distributed task queue.",
        "description": "Design and implement a distributed task queue system.",
        "test_cases": []
      },
      {
        "id": 6,
        "question": "Implement a function to solve the N-Queens problem.",
        "description": "Write a function to find all possible arrangements of N queens on an NÃ—N chessboard such that no two queens threaten each other.",
        "test_cases": []
      },
      {
        "id": 11,
        "question": "Implement a Merkle Tree.",
        "description": "Write a function to build and verify a Merkle tree.",
        "test_cases": []
      },
      {
        "id": 12,
        "question": "Implement a Bloom Filter.",
        "description": "Write a function to implement a space-efficient probabilistic data structure that is used to test whether an element is a member of a set.",
        "test_cases": []
      }
    ]
  }
}
